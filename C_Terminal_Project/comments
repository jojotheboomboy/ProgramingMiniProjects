// execl("/bin/toch", "toch", "temp", NULL);
        //execlp
        // execlp(command, args);
        // char* ars[4] = {"ls", NULL};
        // char* ars = "ls";
        // execlp("ls", ars, "-l", NULL);
// printARGS(args);
                // if(count == 1)
                // {
                //     // printf("%s", token_ONE);
                //     token_ONE[strlen(token_ONE) - 1] = 0;
                //     args[0] = token_ONE;
                // }
                // else
                // {
                //     printf("%s", args[count-1]);
                //     args[count-1][strlen(args[count-1]) - 1] = 0;
                // }

                // args[count] = NULL;
// printf(" %s", token);
            // token = strtok(NULL, s);
            // if(token != NULL)
            //     printf("\n");
            // count++;

//move cwd to 2nd arg
                    // int change = chdir(argv[1]);
                    // if (change == -1)
                    // {
                    //     printf("Can't chdir to %s\n", argv[1]);
                    //     exit(1);
                    // }


    // if(argc != 2)
    // {
    //     printf("Usage: ./prog2 <dir>\n");
    //     return 0;
    // }

/* //These are some tests of debugging
        scanf("%s", &str[0]);
        printf(str);
        printf("%s : %s = %i\n",str, exit, strcmp(str, exit));*/
        
        // printf("Line read: %s", str);
    // Set us a string that is the equivalent of the user typing exit to leave 
    // char exit[256];
    // strcpy(exit, "exit\n");

// printf("str==pwd: %d\n", strcmp(token, "pwd\n"))
            // run command
            // char* args[3] = {"ls", "-l", NULL};